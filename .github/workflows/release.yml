# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the codeblocks branch
  #push:
  #  branches: [ codeblocks ]
  #pull_request:
  #  branches: [ codeblocks ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-i686-toolchain
      
      - name: Check out the checkout ;)
        run: |
          echo $GITHUB_WORKSPACE
          ls -la $GITHUB_WORKSPACE
      
      - name: Check out /mingw32
        run: ls -la /mingw32/bin
    
      - name: Check out the compiler
        run: /mingw32/bin/i686-w64-mingw32-g++ --version
      
      - name: Build executable 1
        run: |
          set -x
          cd $GITHUB_WORKSPACE
          ./build.sh
      
      - name: Build executable 2
        if: success() || failure()
        run: |
          set -x
          cd $GITHUB_WORKSPACE
          /mingw32/bin/mingw32-make

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
      - name: Create Github release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.date.outputs.date }}
          #${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
    
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $GITHUB_WORKSPACE\wx-config.exe
          asset_name: wx-config.exe
          asset_content_type: application/exe
